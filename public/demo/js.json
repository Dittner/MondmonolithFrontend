{"uid":"js","title":"JavaScript","directory":"Frontend","pages":[{"uid":"1891659d69a-495a1a23-5","title":"NoCSS","blocks":[{"uid":"1891659d69a-495a1a23-6","text":"__NoCSS__ is a lib, that enables you to implement ui-logic directly in the code (tsx-file). The lib has built-in components such as VStack, HStack, Input, TextArea, Button, Label, etc."},{"uid":"1891659d69a-495a1a23-7","text":"Example:\n```tsx\nconst MarkdownEditor = (...) => {\n  const { app } = useDocsContext()\n  ...\n  if (app.size === AppSize.S || app.size === AppSize.XS) {\n    return (\n      <VStack halign=\"center\"\n              valign=\"top\"\n              gap=\"5px\"\n              width=\"100%\"\n              paddingBottom=\"50px\"\n              layer={LayoutLayer.ONE}>\n\n        <Label className=\"mono h4\"\n               text={title}\n               textColor={app.theme.text75}\n               whiteSpace=\"pre\"\n               paddingLeft=\"25px\"\n               minWidth=\"150px\"/>\n\n        <HStack halign=\"stretch\"\n                valign=\"stretch\"\n                gap=\"50px\">\n          <TextArea className=\"mono\"\n                    text={value}\n                    theme={app.theme}\n                    paddingHorizontal=\"20px\"\n                    paddingVertical=\"10px\"\n                    onApply={apply}\n                    onCancel={cancel}\n                    autoFocus={autoFocus}\n                    width=\"50%\"/>\n\n          <VSeparator theme={app.theme}/>\n\n          <MarkdownText value={value}\n                        width=\"50%\"/>\n        </HStack>\n\n        <Button title=\"Next Page\"\n                textColor={app.theme.textGreen75}\n                paddingHorizontal=\"150px\"\n                paddingVertical=\"10px\"\n                border={['1px', 'solid', app.theme.border]}\n                onClick={showNextPage}\n                hoverState={state => {\n                  state.textColor = app.theme.textGreen\n                  state.border = ['1px', 'solid', app.theme.textGreen]\n                }}>\n        </Button>\n      </VStack>\n    )\n  }\n...\n})\n```"}]},{"uid":"18897d6c7de-c6bc016b-4","title":"Event","blocks":[{"uid":"18897d6c7de-c6bc016b-7","text":"## Event's phase"},{"uid":"18897d6c7de-c6bc016b-6","text":"~~~js\nEvent.NONE = 0\nEvent.CAPTURING_PHASE = 1\nEvent.AT_TARGET = 2\nEvent.BUBBLING_PHASE = 3\n~~~"},{"uid":"18897d6c7de-c6bc016b-8","text":"When an event is dispatched to an object that participates in a tree (e.g., an element), it can reach event listeners on that object’s ancestors too. Effectively, all the object’s inclusive ancestor event listeners whose capture is true are invoked, in tree order. And then, if event’s bubbles is true, all the object’s inclusive ancestor event listeners whose capture is false are invoked, now in reverse tree order."},{"uid":"18897d6c7de-c6bc016b-5","text":"~~~js\nfunction test(e) {\n   console.log(\"e.target: \", e.target)\n   console.log(\"e.currentTarget: \", e.currentTarget)\n   console.log(\"e.eventPhase: \", e.eventPhase)\n}\n   \ndocument.body.addEventListener(\"hey\", test)\ndocument.addEventListener(\"hey\", test, {capture: false})\nvar ev = new Event(\"hey\", {bubbles:true})\ndocument.getElementById(\"x\").dispatchEvent(ev)\n//OUTPUT:\n//e.target:         <span id=​\"x\">​world​</span>​\n//e.currentTarget:  <body>​\n//e.eventPhase:     3 (Event.BUBBLING_PHASE)\n//e.target:         <span id=​\"x\">​world​</span>​\n//e.currentTarget:  <document>\n//e.eventPhase:     3 (Event.BUBBLING_PHASE)\n~~~"},{"uid":"18897d6c7de-c6bc016b-9","text":"~~~js\ndocument.body.addEventListener(\"hey\", test)\ndocument.addEventListener(\"hey\", test, {capture: true})\nvar ev = new Event(\"hey\", {bubbles:true})\ndocument.getElementById(\"x\").dispatchEvent(ev)\n//OUTPUT:\n//e.target:         <span id=​\"x\">​world​</span>​\n//e.currentTarget:  <document>\n//e.eventPhase:     1 (Event.CAPTURING_PHASE)\n//e.target:         <span id=​\"x\">​world​</span>​\n//e.currentTarget:  <body>​\n//e.eventPhase:     3 (Event.BUBBLING_PHASE)\n~~~"},{"uid":"18897d6c7de-c6bc016b-a","text":"~~~js\ndocument.body.addEventListener(\"hey\", test)\ndocument.addEventListener(\"hey\", test, {capture: true})\nvar ev = new Event(\"hey\", {bubbles:false})\ndocument.getElementById(\"x\").dispatchEvent(ev)\n//OUTPUT:\n//e.target:         <span id=​\"x\">​world​</span>​\n//e.currentTarget:  <document>\n//e.eventPhase:     1 (Event.CAPTURING_PHASE)\n~~~"},{"uid":"18897d6c7de-c6bc016b-b","text":"~~~js\ndocument.getElementById(\"x\").addEventListener(\"hey\", test, {capture: true})\ndocument.getElementById(\"x\").dispatchEvent(ev)\n//OUTPUT:\n//e.target:        <span id=​\"x\">​world​</span>​\n//e.currentTarget: <span id=​\"x\">​world​</span>​\n//e.eventPhase:    2 (Event.AT_TARGET)\n~~~"},{"uid":"18897d6c7de-c6bc016b-c","text":"~~~js\ndocument.getElementById(\"x\").addEventListener(\"hey\", test, {capture: false})\ndocument.getElementById(\"x\").dispatchEvent(ev)\n//OUTPUT:\n//e.target:        <span id=​\"x\">​world​</span>​\n//e.currentTarget: <span id=​\"x\">​world​</span>​\n//e.eventPhase:    2 (Event.AT_TARGET)\n~~~"},{"uid":"18897d6c7de-c6bc016b-d","text":"## EventEmitter"},{"uid":"18897d6c7de-c6bc016b-e","text":"~~~js\nconst emitter = () => {\n  let events = {}\n  const ee = {\n    //subscribe to event with key = name and delay for callback = timeout:\n    on: (name, f, timeout = 0) => {\n      const event = events[name] || []\n      events[name] = event\n      event.push(f)\n      if (timeout) setTimeout(() => {\n        ee.remove(name, f)\n      }, timeout)\n    },\n    //notify all subscribed observables:\n    emit: (name, ...data) => {\n      const event = events[name]\n      if (event) event.forEach((f) => f(...data))\n    },\n    remove: (name, f) => {\n      const event = events[name]\n      if (!event) return\n      const i = event.indexOf(f)\n      if (i !== -1) event.splice(i, 1)\n    },\n    clear: (name) => {\n      if (name) delete events[name]\n      else events = {}\n    },\n    count: (name) => {\n      const event = events[name]\n      return event ? event.length : 0\n    },\n    listeners: (name) => {\n      const event = events[name]\n      return event.slice() #copy of event-array\n    },\n    names: () => Object.keys(events)\n  }\n  return ee\n}\n\nconst ee = emitter()\nee.on('e1', (data) => {\n  console.dir(data)\n})\n\nee.emit('e1', { msg: 'e1 ok' })\n\n//OUTPUT: { msg: 'e1 ok' }\n~~~"}]},{"uid":"1887cf6af4b-84821ab5-24","title":"Higher Order Functions","blocks":[{"uid":"1888ce57a54-3f4b7687-4","text":"A __Higher Order function (HOF)__ is a function that receives a func as an argument or returns a func as output."},{"uid":"188929ec985-94b1ad07-8","text":"## Mathematical function\nHOF, that receives and returns a func"},{"uid":"1887cf6af4b-84821ab5-25","text":"~~~js\nconst f1 = (x) => (2*x - 10)\nconst hof = (f) => (x) => f(x)*f(x)\n\nconst f2 = hof(f1)\n\nconsole.log( f1(10) )\nconsole.log( f2(10) )\n//OUTPUT: 10 100\n~~~"},{"uid":"188929ec985-94b1ad07-9","text":"## Callback\nHOF, that receives and invokes a func"},{"uid":"1888d1d5627-ee208319-5","text":"~~~js\nconst hof = (x, y, callback) => {\n  callback(x + y)\n}\n\nfunction getSum(result) {\n  console.log(\"Result: \", result)\n}\n\nhof(1, 2, getSum)\n//OUTPUT: Result: 3\n~~~"},{"uid":"1888d1d5627-ee208319-6","text":"## Closure\nHOF, that retruns a func, that catches identificators in isolated lexical\nenvironment. All functions in JS are closures."},{"uid":"1889563c1d5-83bc4b01-4","text":"~~~js\nconst hof = (a) => {\n  const b = 'B' //Closure variable\n  return (c) =>  {\n    console.dir({ a, b, c })\n  }\n}\n\nhof('A')('C')\n//OUTPUT: { a: 'A', b: 'B', c: 'C' }\n~~~"},{"uid":"1889563c1d5-83bc4b01-5","text":"## Wrapper\nHOF, that receives and returns the same func or its result, adding some logic."},{"uid":"1889563c1d5-83bc4b01-6","text":"~~~js\nconst logable = (fn) => (...args) => {\n  const res = fn(...args)\n  console.log(`Call: ${fn.name}(${args.join(', ')}) Result: ${res}`)\n  return res\n}\n\nconst sum = (a, b) => a + b\n\nconst logableSum = logable(sum)\nconst a = logableSum(1, 2)\nconsole.log(a)\n//OUTPUT:\n//Call: sum(1, 2) Result: 3\n//3\n~~~"}]},{"uid":"18897d6c7de-c6bc016b-f","title":"Loops","blocks":[{"uid":"18897d6c7de-c6bc016b-10","text":"## for\nRead object keys (properties)"},{"uid":"18897d6c7de-c6bc016b-11","text":"~~~js\nlet оbj = {х: 1, у: 2, z: 3};\nlet keys = \"\"\nfor(let k of Object.keys(obj)) {\n  keys += k;\n}\nconsole.log(keys)\n//OUTPUT: \"xyz\"\n\nlet keys = \"\"\nfor(let k in obj) {\n  keys += k;\n}\nconsole.log(keys)\n//OUTPUT: \"xyz\"\n~~~"},{"uid":"18897d6c7de-c6bc016b-13","text":"Read object values"},{"uid":"18897d6c7de-c6bc016b-12","text":"~~~js\nlet sum = 0;\nfor(let v of Object.values(оbj)) {\n  sum += v;\n}\nconsole.log(sum)\n//OUTPUT: 6\n~~~"},{"uid":"18897d6c7de-c6bc016b-14","text":"Read object keys and values"},{"uid":"18897d6c7de-c6bc016b-17","text":"~~~js\nlet pairs = \"\"\nfor(let [k, v] of Object.entries(obj)) {\n  pairs += k + v;\n}\nconsole.log(pairs)\n//OUTPUT: \"x1y2z3\"\n~~~"},{"uid":"18897d6c7de-c6bc016b-16","text":"Iterate over array"},{"uid":"18897d6c7de-c6bc016b-15","text":"~~~js\nfor (let i = 0, len = data.length; i < len; i++) \n  console.log(data[i]);\n\nfor (let datum of data)\n  console.log (datum);\n\nfor (let property in object)\n  console.log(property);\n\nfor (let step = 0; step < 5; step++) {\n  // Runs 5 times, with values of step 0 through 4.\n  console.log(\"Walking east one step\");\n}\n~~~"},{"uid":"18897d6c7de-c6bc016b-18","text":"Iterate over string"},{"uid":"18897d6c7de-c6bc016b-19","text":"~~~js\ncountCharactersFrom(text) {\n  text.replace(/\\s/g, \"\").toUpperCase();\n  for(let character of text) {\n    let count = this.letterCounts.get(character);\n    this.letterCounts.set(character, count + 1);\n    this.totalLetters++;\n  }\n}\n~~~"},{"uid":"18897d6c7de-c6bc016b-1a","text":"Iterate over Set"},{"uid":"18897d6c7de-c6bc016b-1b","text":"~~~js\nlet text = \"Ha, hа, hа, what is it?\";\nlet wordSet = new Set(text.split(\" \"));\nlet unique = [];\nfor (let word of wordSet) {\n  unique.push(word);\nconsole.log(unique)\n//OUTPUT: [\"Ha,\", \"ha,\", \"what\", \"it?\", \"is\"]\n~~~"},{"uid":"18897d6c7de-c6bc016b-1c","text":"## for-each"},{"uid":"18897d6c7de-c6bc016b-1d","text":"~~~js\nconst array1 = ['a', 'b', 'c']\narray1.forEach(element => console.log(element))\n~~~"},{"uid":"18897d6c7de-c6bc016b-1e","text":"## while"},{"uid":"18897d6c7de-c6bc016b-1f","text":"~~~js\nlet n = 0;\nlet x = 0;\nwhile (n < 3) {\n  n++;\n  x += n;\n}\n~~~"},{"uid":"18897d6c7de-c6bc016b-20","text":"## do-while"},{"uid":"18897d6c7de-c6bc016b-21","text":"~~~js\nlet i = 0;\ndo {\n  i += 1;\n  console.log(i);\n} while (i < 5);\n~~~"}]},{"uid":"1887cf6af4b-84821ab5-27","title":"Symbol.iterator","blocks":[{"uid":"18899e76391-48a3a3ae-5","text":"## Iterator"},{"uid":"1887cf6af4b-84821ab5-28","text":"Array, Map, Set are iterable objects. All iterable objects should have a func `[Symbol.iterator]()`, that returns a current calculated value, e.g. `{value: 10}`. After the end of the loop the iterator returns `{done: true}`.\n\nCreate Range class as iterable object:"},{"uid":"1887cf6af4b-84821ab5-29","text":"~~~js\nclass Range {\n  constructor(from, to) {\n    this.from = from\n    this.to = to\n  }\n  \n  toString() { return `Range(${this.from}, ${this.to})` }\n  \n  [Symbol.iterator]() {\n    let value = Math.ceil(this.from)\n    const last = this.to;\n    return {\n      next() {\n        return (value < last) ? { value: value++ } : { done: true }\n      }\n    }\n  }\n}\n\nfor(let value of new Range(0, 5)) {\n  console.log(value)\n}\n//OUTPUT: 0,1,2,3,4\n~~~"},{"uid":"18899e76391-48a3a3ae-6","text":"## Generator"},{"uid":"18899e76391-48a3a3ae-8","text":"Generators simplify iterator-authoring using function* and yield. A function declared as function* returns a Generator instance. Generators are subtypes of iterators which include additional next and throw."},{"uid":"18899e76391-48a3a3ae-9","text":"~~~js\nvar fibonacci = {\n  [Symbol.iterator]: function*() {\n    var pre = 0, cur = 1\n    for (;;) {\n      var temp = pre\n      pre = cur\n      cur += temp\n      yield cur\n    }\n  }\n}\n\nfor (var value of fibonacci) {\n  if (value > 20)\n    break\n  console.log(value)\n}\n//OUTPUT: 1 2 3 5 8 13\n~~~"}]}]}